1. Mysql의 구조
- 정보는 표(table)에 저장된다.
- 연관된 표를 그룹핑해서 정리하는 파일의 폴더 같은 것이 데이터베이스(database)이다.
- mysql에서는 데이터베이스와는 말과 함께 스키마(schema)를 같은 의미로 쓴다.
- 데이터베이스, 스키마가 모이면 데이터베이스 서버(Database server)에 저장한다.

2. Mysql의 특징
- 보안에 강하다. 자체적 보안체계로 데이터를 안전히 보관 가능하다.
- 권한이라는 기능이 있어서 어떤 사용자는 특정 테이블을 읽기만 가능하게, 어떤 사람은 수정만 가능하게할 수 있다.
- -uroot : 기본유저. 관리자계정이므로 모든 권한을 가지고 있음.
- -p 는 패스워드 요청이다.

3. 스키마(schema)의 사용
- 명령어 입력 시 세미콜론(;)은 필수로 입력한다.
- CREATE DATABASE name : name 스키마 생성
- DROP DATABASE name : name 스키마 삭제
- USE name : name 스키마 사용 →명령 입력 시, 이후의 명령은 name이라는 스키마의 표에 적용되도록 한다는 의미
- SHOW DATABASES : 데이터베이스 서버의 스키마 미리보기

4. SQL과 테이블의 구조
- SQL(Structured Query Language) : 데이터베이스 서버에 요청하기 위한 언어
- table : 표
- row, record : 행, 보통 데이터 하나하나
- column : 열, 보통 데이터 타입 또는 구조

5. DATABASE
- 
5. 테이블의 생성
- CREATE TABLE name : name이라는 이름의 테이블 생성
- 사용자의 데이터 입력을 규제, 제한하는 기능이 있다. 
  → column의 데이터타입 제한
  → 데이터의 글자 수 제한 
- 데이터타입은 검색글 참조.
- id값은 없으면 나중에 찾지 못하고 삭제, 수정할 수 없으니 꼭 있어야한다.
- NOT NULL : 값이 없는 것, 공백을 허용하지 않음
- AUTO INCREMENT : column의 값을 자동으로 1씩 증가시킴

6. INSERT
- DESC : table의 구조
- INSERT INTO name : name에 집어넣는다.
  → 보통 column에 value를 집어넣는다. 괄호 안의 순서에 따라 입력되기 때문에 잘 넣어야한다.
  ex) INSERT INTO topic(title, description, created) VALUES(MySQL, MySQL is..., NOW) 
- 1 row affected : 하나의 행이 영향을 받았다. 테이블에 데이터를 입력하면 나오는 문구

7. SELECT
- SELECT * FROM name : name 테이블의 모든 데이터를 선택하여 읽는다.
- SELECT 뒤에는 선택할 column을 지정한다.
- *은 따로 값을 주지 않는다는 뜻
- SELECT id, title, created, author FROM topic : id, title, created, author의 column에서 데이터를 선택하여 읽는다.
- MySQL은 문법적으로 명령어를 작성할 때 지켜야하는 순서가 있다.
- WHERE은 column을 지정한다. 
- column지정 시 해당 column안의 특정 데이터를 가지고 있는 row만 보고 싶을 때 예제와 같이 쓴다
ex) SELECT id, title, created, author FROM topic WHERE author='egoing';
- ORDER BY name DESC : name column을 내림차순으로 정렬
- LIMIT 3 : 데이터를 위에서부터 3개만 출력 