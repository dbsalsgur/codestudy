1. ArrayList의 개념
- List의 기능을 Array를 활용해서 구현한 클래스

2. ArrayList의 동작원리
- 데이터를 맨 끝이 아닌 중간이나 처음(0번째)에 넣는다고 했을 때 아래와 같이 동작한다.
ex) 
{10, 20, 30, 40}가 인자로 구성된 ArrayList가 있다고 하자
만약 50이라는 데이터를 1번째 저장공간에 넣고 싶다고 할 때 어떻게 동작할까

numbers.add(1,50)이라고 하면 1번째 저장공간에 50을 추가하게 되는데,
먼저 ArrayList의 맨 끝에 빈 공간을 만든다. 
이에 40을 밀어 넣고, 그다음 30, 그다음 20순으로 뒤로 한칸씩 민다.
1번째에 빈공간이 생겼을 때, 그제야 50을 추가할 수 있다.
 →데이터를 추가할 때 값을 하나하나 옮겨야되기 때문에 느리다.

- 데이터를 찾을 때는 인덱스 값을 이용해서 바로 찾을 수 있기 때문에 매우 빠르다.

3. ArrayList의 크기
- ArrayList는 내부적으로 size라는 변수를 통해 그 크기 값을 저장하고 있다.
- 데이터가 하나 추가되면 size의 값도 +1이 되고, 데이터가 하나 삭제되면 size의 값도 -1이 된다.
- 이를 호출할 수 있는 메소드는 size()이며, 아래처럼 사용한다.
ex) numbers.size();
 →numbers의 크기(size 변수)를 리턴한다.
