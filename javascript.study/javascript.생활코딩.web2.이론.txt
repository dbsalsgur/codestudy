1. 수업의 목적
- javascript가 만들어질 당시 html밖에 없었다.
- javascript는 사용자의 입력 또는 움직임에 반응해서 결과가 나타난다.
- 웹브라우저는 한번 화면에 출력되면 바뀌지 않는다. 그것을 가능하게 하는 언어가 javascript이다.
- javascript는 html을 제어하는 언어이다.

2. HTML과 javascript의 만남 : script태그
- 웹브라우저는 script태그 안에 있는 내용을 javascript로 해석한다.
- javascript에서는 작은따옴표 안에 있는 내용을 텍스트로 인지한다
- html은 정적인 언어, javascript는 동적인 언어이다.
document.write(1+1) → 출력값 2
document.write('1+1') → 출력값 1+1
<h1>html</h1>      → 출력값 1+1
      1+1

3. HTML과 javascript의 만남 : 이벤트
(1) 태그
- input : 삽입
(2) 속성
- type : 형태
- value : 값, 이름
- onclick : 사용자가 클릭
 → onclick 안에는 javascript 문법이 항상 온다.
 → onclick속성의 속성은 사용자가 해당태그를 클릭 시 onclick 안의 javascript가 문법에 따라 동작한다.
- onchange : 요소(해당 태그)의 변경을 감지
- onkeydown : 요소 위에서 키를 누름
(3) 이벤트
- 정의 : 웹페이지에서 마우스를 클릭, 키 입력, 포커스 이동 등의 사용자의 행동에 대응하여 어떠한 동작(사건 event)를 수행하는 것.
- 위의 onclick, onchange, onkeydown이 모두 이벤트

4. HTML과 javascript의 만남 : 콘솔
- 페이지소스 보기의 콘솔
- .length : 앞에 있는 요소의 글자수를 세주는 코드

5. JS의 데이터타입 : 문자열과 숫자
(1)데이터 타입
- 원시 값 → 언어의 최저레벨에서 직접표현되는 불변 데이터
  : Boolean, Null, Undefined, Number, Biglnt, String, Symbol
- 객체 → 속성의 컬렉션
(2)여러 코드들 
- .toUpperCase() : 문자열을 대문자로 변환
- .indexOf('') : 괄호안 문자의 시작 위치
- .trim() : 문자열 공백 제거

6. 변수와 대입연산자
- 변수(variable) : 값이 바뀔 수 있는 수
- 상수(constant) : 값이 바뀔 수 없는 수
- 대입연산자 : 변수에 수를 대입할 수 있는 연산자
 → 좌항과 우항을 결합하여 우항의 값을 만듦
- 변수 선언 시 var(variable)를 써야 함
ex) var name = 'myname'

7. 제어할 태그 선택하기
- document.querySelector() : 괄호 안의 태그, 클래스, id 선택자를 넣어서 선택자 기능 수행
- .style : javascript에 style속성 삽입
- style.backgroundColor : javascript 배경색

8. 조건문
- toggle 기능 : 두가지 상태밖에 없는 상황에서 스위치를 누르면 한 기능이 한번 더 누르면 나머지 한 기능이 구현되는 기능
- ===는 좌항과 우항을 비교해서 불린 값을 나타내는 비교연산자이다
- document.write()는 괄호 안의 값을 출력한다(java의 System.Println).

9. 리팩토링 : 중복의 제거
- 리팩토링 : 소프트웨어가 커지면서 기존에 썼던 코드들을 효율적으로 개선하는 작업
- this : 태그 내에서 태그 자신을 가리키는 코드
- 변수 설정을 통해서 훨씬 효율적으로 작성, 유지보수 가능

10. 반복문과 배열
- 배열 : 변수 안에 여러개의 값을 넣을 수 있다.
- var friends, friends.push('');로 배열에 데이터를 추가할 수 있다.
- 출력하고자 하는 값에 태그를 붙이기 위해서는 앞뒤로 +를 붙여준다.
ex) document.write('<li>+friends+</li>')

11. 함수
- 수납상자와 같은 기능
- java의 메소드와 비슷한 개념
  → 호출가능, 재사용성 ↑
- 마음대로 이름붙이기 가능

12. 객체
- 비슷한 함수, 비슷한 변수를 그룹핑해서 정리정돈하기 위한 것.
- 배열도 기능적 측면에서는 비슷한데, 배열은 정보를 순서대로 저장하고, 객체는 순서 상관없이 저장한다는 특징이 있다.
- friends.Korea에서 friends는 객체, Korea는 키 값(key), .은 object access operator, 즉 객체에 접속하기 위한 도구이다.
- 객체에서 띄어쓰기가 된 데이터를 추가하고 싶다면 대괄호를 사용해서 배열처럼 쓰면 된다.
ex ) var friends = {}
friends["Korea ROTC"] = "taeseong"
- 객체 안에는 함수도 넣을 수 있다.
- 객체에 소속한 함수를 Method, 객체에 소속한 변수를 Property라고 한다.

13. 파일로 정리정돈
- javascript 언어는 text.js로 따로 저장 가능하다(css와 동일)
- 이때 구동 양식은 아래와 같다
  → <script src="text.js"></script>
  → script태그 안에 소스 이름을 넣는 방식
- cache : 웹페이지를 불러올 때 다운받은 파일을 컴퓨터에 저장했다가 다음에 다시 해당 웹페이지를 열 때 네트워크 접속없이 바로 불러올 수 있도록 하는 기능

14. 라이브러리와 프레임워크
- 라이브러리 : 만들고자 하는 프로그램의 부품을 정리정돈 해놓은 소프트웨어
- 프레임워크 : 만들고자 하는 프로그램에 따라 그것의 공통적인 기본양식을 만들어놓은 소프트웨어
  → 이를 통해 개발자가 프로그램을 만들 때 모든 것을 구현하지 않아도 됨
- javascript의 대표적 라이브러리 "jQuery"
- jquey 설명서를 참조해서 훨씬 쉽게 코드를 작성할 수 있고, 가독성 좋게할 수 있다.

15. UI와 API
- 사용자가 시스템을 제어하기 위해서 만든 조작장치는 UI(User Interface)라고 한다
- 애플리케이션을 만들기 위해 사용하기 위한 조작장치를 API(Application Programming Interface)