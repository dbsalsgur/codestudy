1. HTML(HyeprText Makeup Language)
- 언어가 쉬움
- public domain → 공공재이다

2. HTML코딩과 실습환경 준비
- webrowser
- editer
- 쓰고 싶은 에디터는 HTML editor를 검색

3. 태그
- 효과를 넣고싶으면 태그(TAG)를 사용한다.
  <문법>넣고싶은 텍스트</문법>
의 형식으로 작성한다. →앞의 것을 열리는 태그, 뒤의 것을 닫히는 태그라고 한다.
ex) <strong>Electron Korea Limited</strong>
- 태그는 표현하고자 하는 텍스트가 어떤 것인지 설명하는 문법이다.

4. 여러가지 태그
- strong : 진하게 표시
- u : 밑줄긋기(underline의 준말)
- h1~h6 : 모든단계의 제목

5. 통계에 기반한 태그
- https://advancedwebranking.com/html/

6. 많이 쓰이는 태그
- br : 줄바꿈
- p : 단락

7. html이 중요한 이유
- 검색엔진은 수많은 웹페이지를 다운로드해서 검색창에 입력된 글귀에 기반하여 웹페이지를 노출시킨다.
- 예를 들어 '코딩'이라는 제목이 있는 웹페이지가 2개가 있는데, 한개는 제목을 만들기 위해서 글자 크기를 늘리고 진하게 만들었고, 하나는 h3 태그를 이용해서 작성했다고 하자.
- 아마 h3 태그를 이용한 웹페이지가 전자보다는 더 상단에 표시될 것이다.
- 검색엔진에서 노출의 우선순위가 낮아진다는 것은, 정보의 존재를 가리는 것이기 때문에(대부분의 사람들이 정보를 찾기 위해 100쪽까지 가진 않을 것이다) 코드를 적절히 사용하는 것은 매우 중요하다.
- HTML에서 접근성은 굉장히 중요하기 때문에, 태그의 목적에 맞게 적절히 사용하는 것은 대단히 중요하다.

8. 속성
- source : 이미지 첨부 시 이미지파일 지정
- width : 이미지 크기 설정
- 속성은 태그로만 담지 못하는 정보를 보충해주는 역할을 함
- img : 이미지 첨부
- unsplash : 저작권 없는 이미지 웹페이지

9. 부모자식과 목록
- 아래처럼 포함하는 태그를 부모태그, 포함된 태그를 자식태그라고 함
ex) <parent> 
           <child></child>
     <parent> 
- html의 여러 태그들은 관계가 막 바뀐다
- li(list) : 목차
- ul(unorderd list) : 목차 구분, li의 부모 태그
- ol(orderd list) : 목차에 숫자를 넣어줌
- table : 표
- tr : table(표)의 행(가로)
- td : 표안의 데이터, 최상단이나 최좌단에 쓰는 주제 데이터는 th

10. 문서구조와 슈퍼스타들
- 태그 중 빈도 수가 압도적으로 높은 것들
- title : 웹페이지의 제목
- meta charset="utf-8" : 본문이 utf-8 방식으로 저장되어있다.
- body : 문서의 본문,  html 문서의 시작과 끝은 body를 쓰기로 약속되어있다.
- head : 메타데이터의 컨테이너 역할, meta나 title을 감싸준다. 웹페이지의 화면에 표시되진 않는다.
- html : 다른 모든 html 요소의 컨테이너이다. 웹페이지 전체를 감싼다(!doctype 제외).
- !doctype html : 이 문서는 html 타입의 문서이다라고 설명

11. HTML 태그의 제왕
- 이 태그가 없으면 검색엔진은 있을 수 없다.
- a(anchor, 닻) : 링크(hypertext)
- 아래는 태그의 속성이다.
- href : 링크참조, <a href="">의 형식으로 사용
- target="_blank" : 링크 클릭 시 새탭에서 페이지 열기
- title="text" 커서 위치 시 설명툴팁 표시

12. 서버와 클라이언트
- 인터넷이 동작하기 위해서는 최소 2대의 컴퓨터가 필요하다.
- 두대의 컴퓨터가 각각 웹서버, 웹브라우저라는 프로그램을 구동한다.
- 두대의 컴퓨터는 인터넷으로 연결되어있다.
- 웹브라우저에서 웹서버로 index.html(예시)이라는 파일을 요구(request)한다는 신호를 보냄
- 웹서버는 그것을 받아 컴퓨터에 하드디스크에 저장되어있는 index.html을 찾아 웹브라우저로 송신(response)
- 웹브라우저는 index.html 파일을 받음. 해당 코드를 웹브라우저가 해석해서 페이지에 표시함.
- 이 관계를 통해 웹사이트가 동작하는 것임
- 컴퓨터가 정보를 주고받을때 요청하는 컴퓨터를 클라이언트, 응답하는 컴퓨터를 서버라고 부름.

13. 웹 호스팅(github)
- hosting, cloud 둘다 같은 것임
- git은 개발자들의 협업 호스팅사이트임.

14. 웹서버 설치
- apache를 윈도우에 설치하는 방법
- bitnami WAMP stack을 구글에 검색 후 설치
- 실행프로그램을 다운받고 설치
- 설치가 완료되면 apache 기반 서버를 켰다 끌 수 있음.


15. 웹서버의 요모조모
- web browser와 web server가 같이 설치되어 있는 컴퓨터에서 index.html이라는 파일을 열때
http://127.0.0.1/index.html라는 주소를 사용했다.
- 127.0.0.1은 IP주소(internet protocol address)이고, 웹브라우저가 설치되어있는 컴퓨터를 가리키는 특별한 주소이며, 약속된 주소이다. 
- 전세계의 모든 컴퓨터는 127.0.0.1을 웹브라우저에 입력했을때 웹브라우저가 설치된 각자의 컴퓨터의 웹서버를 가리킨다.
- 슬래시 뒤에 쓰인 index.html은 해당 이름의 파일을 서버에 요청하는 방식이다.
- 이후 (현재 apache에서는 htdoc라는 폴더에 해당 파일이 있다.) htdoc라는 디렉토리에서 index.html을 읽어서 다시 웹브라우저에 송신한다.
- 따라서 같은 파일을 ctrl+O를 해서 파일을 여는 것과 구조가 완전히 다르다. 그것은 웹서버를 전혀 거치지 않고 컴퓨터에 저장되어있는 파일을 그대로 가져온 것이기 때문이다.
- 서버를 통해 가져온 파일과 컴퓨터에서 직접 가져온 파일의 주소의 앞부분은 다르다.
- 서버에서 가져왔을때의 주소는 http로 시작하고, 직접가져왔을 때의 주소는 file로 시작한다.
- http(hypertext transfer protocol)는 웹브라우저와 웹서버가 정보를 주고받기 위한 규약이다. 

16. 웹서버와 웹브라우저의 통신
- 웹브라우저가 웹서버에 파일을 요청하기 위해서는 웹서버의 ip주소가 필요하다.
- 컴퓨터의 ip주소는 네트워크 및 공유센터에서 확인할 수 있다.
- 웹서버 컴퓨터에서 127.0.0.1이라는 주소를 통해서 파일을 열 수도 있고, ip주소를 통해서 열 수도 있다.
이는 127.0.0.1은 모든컴퓨터가 자기 자신을 지칭하는 특수한 주소이기 때문에 가능한 것이다.
 → 즉 다른 컴퓨터의 웹브라우저에서 웹서버에 있는 index.html을 열려고 시도할때 127.0.0.1을 사용하면 안나온다는 뜻이다.