1. 상속의 개념
- 상속은 객체가 하나 있으면, 그 객체의 변수(필드)와 메소드를 다른 객체가 그대로 물려받을 수 있는 기능이다.
- 상속할때 물려받은 변수와 메소드의 변경은 물론이고, 새로운 변수나 메소드를 추가하여 쓸 수 있다.
- 객체를 생성하고 메소드를 호출할때, 새로운 메소드를 추가하고 싶은 경우가 있다.
- 만약 여러가지 이유로 소스인 클래스에 접근하여 메소드를 추가할 수 없는 경우 상속이 필요하다.
- 상속이 일어나게 되면, 기존객체는 부모객체(또는 클래스), 상속을 받는 객체는 자식객체(또는 클래스)가 된다.
- 부모 클래스, 자식 클래스 = super class, sub class 또는 base class, derived(유도) class

2. 코드로 알아보는 상속
- 자식 클래스를 만드려면 아래와 같은 양식으로, "자식클래스명 extends 부모클래스명"으로 작성한다.
ex) class SubstractionableCalculator extends Calculator
- 이렇게 자식클래스를 만들면, 자식클래스 이름으로 객체를 생성할 수 있는데, 이때 자식클래스 뿐만 아니라, 부모클래스의 변수와 메소드를 가져올 수 있다는 것이다.
ex)    c1.setOprands(10, 20);
        c1.sum();
        c1.avg();
        c1.substract();

3. 다양한 종류의 상속
- 자식클래스는 얼마든지 만들 수 있다.
- 자식클래스의 자식클래스를 만들 수 있다.
- 같은 패키지 안의 클래스는 똑같이 두번 이상 정의할 수 없다.