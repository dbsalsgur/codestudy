1. 컴파일과 클래스
- 클래스패스 : 클래스가 위치하는 경로를 지정해서, 자바가 필요로하는 클래스를 로드하는 방법을 지정하는 것
- .java라고하는 소스 파일을 컴파일 하려면
1) cmd를 통해 해당 .java파일이 있는 디렉토리로 이동한다.
2) javac 컴파일할_파일.java를 입력한다
3) 결과로 class파일이 생성된다
  → 이때, .java의 이름과 같은 .class파일이 만들어지는 것이 아니라, .java에서 선언한 클래스의 이름으로 , 선언한 클래스 개수만큼 파일이 생성된다.
ex) Classpath.java에 ClasspathDemo, item이라는 클래스를 선언 했다면, 컴파일 후 ClasspathDemo.class, item.class 두개의 파일이 생성된다.

2. 클래스와 경로의 관계
- main이 있는 클래스가 실행 클래스가 된다.
- javac 컴파일할_파일.java : 컴파일할_파일.java를 컴파일 한다
- java 실행_파일 : 실행할 class파일에서 약속된 main 메소드를 실행한다.
- java -classpath ".;클래스파일의_디렉토리" 실행_파일 : 실행 파일과 연관된 클래스 파일이 같은 디렉토리안에 없을 경우 연관된 클래스 파일의 경로를 지정해주어 이상없이 실행될 수 있게 하는 것
- 점(.) : 현재 디렉토리라는 뜻. 
- 세미콜론(:) : 경로와 경로를 구분해주는 기호
- 즉 ".;lib"는 우선 현재 디렉토리에서 확인을 하고 없다면 하위 디렉토리인 lib이라는 디렉토리에서 확인해서 있으면 실행한다는 뜻.
- java 실행파일 = java -classpath "." 실행파일

3. 환경변수 
- 자바 애플리케이션을 실행할 때 클래스 파일의 위치를 지정해주는 것이 환경변수이다.
- 환경변수는 운영체제에 설정하는 변수이다.
- 내 pc - 속성 - 고급 - 환경변수를 하면 환경변수를 지정할 수 있다.